apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: v1beta-new-resource-group
  title: New Resource Group
  description: scaffolder v1beta3 template to create resource group
  tags:
    - azure
    - infrastructure
    - cet
    - resource-group
    - recommended
spec:
  owner: co-idp-launchpad-dev
  type: service
  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Fill Resource Group Information
      required:
        - name
        - location
        - environment
        - subscription
      properties:
        name:
          title: Name
          type: string
          description: Resource Group Name
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
          ui:autofocus: true
          ui:options:
            rows: 5
          ui:errorMessages:
            pattern: "First letter must be a letter, and only letters and numbers are allowed delimited by hyphens"
        location:
          title: Location
          type: string
          description: Resource Group Location
          default: westeurope
          enum:
            - westeurope
            - northeurope
            - swedencentral
          enumNames:
            - West Europe
            - North Europe
            - Sweden Central
        subscription:
          title: SubscriptionId
          type: string
          description: Enter Subscription ID
          ui:autofocus: true
          ui:widget: text
        environment:
          title: Environment
          type: string
          description: Resource Group Environment
          default: dev
          enum:
            - dev
            - test
            - prod
            - poc
            - nonprod
          enumNames:
            - Development
            - Testing
            - Production
            - POC
            - Non-Production
      errorMessage:
        properties:
          name: 'First letter must be a letter, and only letters and numbers are allowed delimited by hyphens'
    - title: Fill solution information
      required:
        - solutionID
        - owner
      properties:
        solutionID:
          title: Solution ID
          type: string
          description: Solution ID or RFD number
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Solution owner
          ui:autofocus: true
          ui:widget: textarea
          ui:help: 'Enter multiple owners separated by comma'
          pattern: '^([a-zA-Z0-9._%+-]+@essity\.com)(,\s*[a-zA-Z0-9._%+-]+@essity\.com)*$'
          ui:options:
            rows: 1
        businesContext:
          title: Business Context
          type: string
          description: Business Context
          ui:autofocus: true
          ui:widget: textarea
          ui:options:
            rows: 4
          ui:help: 'Enter business context'
        action:
          title: Action
          type: string
          description: Create / Destroy
          ui:autofocus: true
          default: apply
          enum:
            - apply
            - destroy
          enumNames:
            - Create
            - Destroy
      errorMessage:
        properties:
          owner: 'Enter valid email address'

  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./templates/components/resource-group-component.yaml
        values:
          name: ${{ parameters.name }}
          location: ${{ parameters.location }}
          environment: ${{ parameters.environment }}
          subscription: ${{ parameters.subscription }}
          solutionID: ${{ parameters.solutionID }}
          owner: ${{ parameters.owner }}
          businesContext: ${{ parameters.businesContext }}
          action: ${{ parameters.action }}
    - id: publish
      name: Publish
      action: github:repo:push
      input:
        repoUrl: 'github.com?repo=resource-groups-components&owner=prooptimus'
        description: This is ${{ parameters.name }}
        targetPath: 'components/resource-group-component.yaml'


    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: 'components/resource-group-component.yaml'

    - id: deploy
      name: Deploy
      action: github:actions:dispatch
      input:
        repoUrl: 'github.com?repo=backstage.templates&owner=prooptimus'
        workflowId: 'terraform_deploy_resource_group.yaml'
        branchOrTagName: 'main'
        workflowInputs:
          resource_group_name: ${{ parameters.name }}
          subscription_id: ${{ parameters.subscription }}
          environment: ${{ parameters.environment }}
          location: ${{ parameters.location }}
          solutionID: ${{ parameters.solutionID }}
          owner: ${{ parameters.owner }}
          businessJustification: ${{ parameters.businesContext }}
          action: ${{ parameters.action }}